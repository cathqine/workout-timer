{"ast":null,"code":"var _jsxFileName = \"/Users/catherineliu/Desktop/workout-timer/src/components/pages/Customs.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Blocks from \"../Blocks.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// consider form submission type - before moving and and displaying a different view\nconst Customs = () => {\n  _s();\n  let [text, setText] = useState(\"Choose your set time\");\n  let [shortDesc, setShortDesc] = useState(\"30 second per set\");\n  let [medDesc, setMedDesc] = useState(\"40 second per set\");\n  let [longDesc, setLongDesc] = useState(\"50 second per set\");\n  useEffect(() => {\n    setText(\"Select total number of sets\");\n  }, []);\n  let [data, setData] = useState({\n    secondsPerSet: '0',\n    numSets: '0'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"caption\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row center-contents default-div\",\n      style: {\n        marginBottom: \"2em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Blocks, {\n        location: \"/workout-start-0\",\n        margin: \"0em auto 0em auto\",\n        text: \"Short\",\n        description: shortDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Blocks, {\n        location: \"/workout-start-0\",\n        margin: \"0em auto 0em auto\",\n        text: \"Medium\",\n        description: medDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-row center-contents default-div\",\n      style: {\n        marginBottom: \"2em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Blocks, {\n        location: \"/workout-start-0\",\n        margin: \"0em auto 0em auto\",\n        text: \"Long\",\n        description: longDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Blocks, {\n        location: \"/workout-start-0\",\n        margin: \"0em auto 0em auto\",\n        text: \"Custom\",\n        description: \"? second per set\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Customs, \"msSYw4ylu6TNWtV0sdNWviynd7Y=\");\n_c = Customs;\nexport default Customs;\nvar _c;\n$RefreshReg$(_c, \"Customs\");","map":{"version":3,"names":["React","useEffect","useState","Blocks","jsxDEV","_jsxDEV","Fragment","_Fragment","Customs","_s","text","setText","shortDesc","setShortDesc","medDesc","setMedDesc","longDesc","setLongDesc","data","setData","secondsPerSet","numSets","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","location","margin","description","_c","$RefreshReg$"],"sources":["/Users/catherineliu/Desktop/workout-timer/src/components/pages/Customs.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useState } from \"react\";\nimport Blocks from \"../Blocks.tsx\";\n\ninterface DataType {\n  secondsPerSet: string,\n  numSets: string,\n}\n\n// consider form submission type - before moving and and displaying a different view\nconst Customs = (): ReactElement => {\n  let [text, setText] = useState<string>(\"Choose your set time\");\n  let [shortDesc, setShortDesc] = useState<string>(\"30 second per set\");\n  let [medDesc, setMedDesc] = useState<string>(\"40 second per set\");\n  let [longDesc, setLongDesc] = useState<string>(\"50 second per set\");\n\n  useEffect(() => {\n    setText(\"Select total number of sets\");\n  }, []);\n\n  let [data, setData] = useState<DataType>({\n    secondsPerSet: '0',\n    numSets: '0',\n  });\n\n  return (\n    <>\n      {/* HARDCODED -- think about {text} */}\n      <div className=\"caption\">{text}</div>\n      {/* HARDCODED !!!!!!! */}\n      <div className=\"flex-row center-contents default-div\" style={{ marginBottom: \"2em\" }}>\n        <Blocks location=\"/workout-start-0\" margin=\"0em auto 0em auto\" text=\"Short\" description={shortDesc} />\n        <Blocks location=\"/workout-start-0\" margin=\"0em auto 0em auto\" text=\"Medium\" description={medDesc} />\n      </div>\n      {/* HARDCODED !!!!!!! */}\n      <div className=\"flex-row center-contents default-div\" style={{ marginBottom: \"2em\" }}>\n        <Blocks location=\"/workout-start-0\" margin=\"0em auto 0em auto\" text=\"Long\" description={longDesc} />\n        <Blocks location=\"/workout-start-0\" margin=\"0em auto 0em auto\" text=\"Custom\" description=\"? second per set\" />\n      </div>\n    </>\n  );\n}\n\nexport default Customs;"],"mappings":";;AAAA,OAAOA,KAAK,IAAkBC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAChE,OAAOC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAOnC;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAoB;EAAAC,EAAA;EAClC,IAAI,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAS,sBAAsB,CAAC;EAC9D,IAAI,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAS,mBAAmB,CAAC;EACrE,IAAI,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAS,mBAAmB,CAAC;EACjE,IAAI,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAS,mBAAmB,CAAC;EAEnED,SAAS,CAAC,MAAM;IACdU,OAAO,CAAC,6BAA6B,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAW;IACvCkB,aAAa,EAAE,GAAG;IAClBC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBAEEjB,OAAA;MAAKkB,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAEZ;IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAErCtB,OAAA;MAAKkB,SAAS,EAAC,sCAAsC;MAACK,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAM,CAAE;MAAAP,QAAA,gBACnFjB,OAAA,CAACF,MAAM;QAAC2B,QAAQ,EAAC,kBAAkB;QAACC,MAAM,EAAC,mBAAmB;QAACrB,IAAI,EAAC,OAAO;QAACsB,WAAW,EAAEpB;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtGtB,OAAA,CAACF,MAAM;QAAC2B,QAAQ,EAAC,kBAAkB;QAACC,MAAM,EAAC,mBAAmB;QAACrB,IAAI,EAAC,QAAQ;QAACsB,WAAW,EAAElB;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG,CAAC,eAENtB,OAAA;MAAKkB,SAAS,EAAC,sCAAsC;MAACK,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAM,CAAE;MAAAP,QAAA,gBACnFjB,OAAA,CAACF,MAAM;QAAC2B,QAAQ,EAAC,kBAAkB;QAACC,MAAM,EAAC,mBAAmB;QAACrB,IAAI,EAAC,MAAM;QAACsB,WAAW,EAAEhB;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpGtB,OAAA,CAACF,MAAM;QAAC2B,QAAQ,EAAC,kBAAkB;QAACC,MAAM,EAAC,mBAAmB;QAACrB,IAAI,EAAC,QAAQ;QAACsB,WAAW,EAAC;MAAkB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3G,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAAlB,EAAA,CA/BKD,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}