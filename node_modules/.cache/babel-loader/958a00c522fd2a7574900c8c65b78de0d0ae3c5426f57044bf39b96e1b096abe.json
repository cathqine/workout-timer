{"ast":null,"code":"var _jsxFileName = \"/Users/catherineliu/Desktop/workout-timer/frontend/src/components/Blocks.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// consider moving to another file instead\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Blocks = props => {\n  _s();\n  let [data, setData] = useState({\n    workoutName: '',\n    secondsPerSet: '',\n    numSets: ''\n  });\n  let [secondsPerSet, setSecondsPerSet] = useState('');\n  let [numSets, setnumSets] = useState('');\n\n  // let location = props.page;\n  // if (!props.disabled) {\n  let navigate = useNavigate();\n  // implement onClick functionality (think <button>)\n  let redirectWithContents = () => {\n    // collect data from stuff\n    const val = props.value;\n    console.log(val);\n    console.log(data);\n    if (data.secondsPerSet === '') {\n      setData(prev => ({\n        ...prev,\n        secondsPerSet: val\n      }));\n      setWorkoutName();\n    } else if (data.numSets === '') {\n      setData(prev => ({\n        ...prev,\n        numSets: val\n      }));\n    }\n    props.setText(\"Select total number of sets\");\n    props.setShortDesc(\"4 sets\");\n    props.setMedDesc(\"8 sets\");\n    props.setLongDesc(\"12 sets\");\n    props.setCustomDesc(\"? sets\");\n\n    // nav to next step\n    // if (val === undefined) {\n    //   navigate(\"/customs\");\n    // }\n  };\n  useEffect(() => {\n    // nav to final step page\n    if (data.secondsPerSet !== '' && data.numSets !== '') {\n      navigate(\"/new-workout\");\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        textDecoration: 'none',\n        margin: `${props.margin}`\n      },\n      onClick: () => redirectWithContents(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-contents\",\n        style: {\n          margin: `${props.margin}`,\n          height: \"10em\",\n          width: \"14em\",\n          backgroundColor: \"#BAD5DD\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"default-div\",\n          style: {\n            color: \"white\",\n            backgroundColor: \"transparent\",\n            marginBottom: \"0.7em\",\n            fontSize: \"2em\"\n          },\n          children: props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"default-div\",\n          style: {\n            color: \"white\",\n            backgroundColor: \"transparent\"\n          },\n          children: props.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Blocks, \"WAQFYDb6AVvvUXHevVFqNKJc9Gk=\", false, function () {\n  return [useNavigate];\n});\n_c = Blocks;\nexport default Blocks;\nvar _c;\n$RefreshReg$(_c, \"Blocks\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Blocks","props","_s","data","setData","workoutName","secondsPerSet","numSets","setSecondsPerSet","setnumSets","navigate","redirectWithContents","val","value","console","log","prev","setWorkoutName","setText","setShortDesc","setMedDesc","setLongDesc","setCustomDesc","children","style","textDecoration","margin","onClick","className","height","width","backgroundColor","display","flexDirection","color","marginBottom","fontSize","text","fileName","_jsxFileName","lineNumber","columnNumber","description","_c","$RefreshReg$"],"sources":["/Users/catherineliu/Desktop/workout-timer/frontend/src/components/Blocks.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ninterface BlocksType {\n  text: string;\n  value: string;\n  description: string;\n  margin: string;\n  setText: React.Dispatch<React.SetStateAction<string>>;\n  setShortDesc: React.Dispatch<React.SetStateAction<string>>;\n  setMedDesc: React.Dispatch<React.SetStateAction<string>>;\n  setLongDesc: React.Dispatch<React.SetStateAction<string>>;\n  setCustomDesc: React.Dispatch<React.SetStateAction<string>>;\n}\n\n// consider moving to another file instead\ninterface DataType {\n  workoutName: string,\n  secondsPerSet: string,\n  numSets: string,\n}\n\nconst Blocks = (props: BlocksType): ReactElement => {\n  let [data, setData] = useState<DataType>({\n    workoutName: '',\n    secondsPerSet: '',\n    numSets: '',\n  });\n\n  let [secondsPerSet, setSecondsPerSet] = useState<string>('');\n  let [numSets, setnumSets] = useState<string>('');\n\n  // let location = props.page;\n  // if (!props.disabled) {\n  let navigate = useNavigate();\n  // implement onClick functionality (think <button>)\n  let redirectWithContents = () => {\n    // collect data from stuff\n    const val = props.value;\n    console.log(val);\n    console.log(data);\n    if (data.secondsPerSet === '') {\n      setData(prev => ({ ...prev, secondsPerSet: val }));\n      setWorkoutName()\n    } else if (data.numSets === '') {\n      setData(prev => ({ ...prev, numSets: val }));\n    }\n\n    props.setText(\"Select total number of sets\");\n    props.setShortDesc(\"4 sets\");\n    props.setMedDesc(\"8 sets\");\n    props.setLongDesc(\"12 sets\");\n    props.setCustomDesc(\"? sets\");\n\n    // nav to next step\n    // if (val === undefined) {\n    //   navigate(\"/customs\");\n    // }\n  }\n\n  useEffect(() => {\n    // nav to final step page\n    if (data.secondsPerSet !== '' && data.numSets !== '') {\n      navigate(\"/new-workout\");\n    }\n  }, [data]);\n\n  return (\n    <>\n      <button style={{ textDecoration: 'none', margin: `${props.margin}` }} onClick={() => redirectWithContents()}>\n        <div className=\"center-contents\" style={{ margin: `${props.margin}`, height: \"10em\", width: \"14em\", backgroundColor: \"#BAD5DD\", display: \"flex\", flexDirection: \"column\" }}>\n          <div className=\"default-div\" style={{ color: \"white\", backgroundColor: \"transparent\", marginBottom: \"0.7em\", fontSize: \"2em\" }}>{props.text}</div>\n          <div className=\"default-div\" style={{ color: \"white\", backgroundColor: \"transparent\" }}>{props.description}</div>\n        </div>\n      </button>\n    </>\n  );\n}\n\nexport default Blocks;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}